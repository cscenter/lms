- name: Setup EC2 instance
  hosts: "{{ hosts_override | default(aws_ec2_host) }}"
  user: "{{ aws_ec2_user }}"
  become: yes
  become_user: "{{ aws_ec2_root_user }}"
  tasks:

    # Used for mapping NVMe device name (which is random) to block device name specified in Amazon EC2 console
    - name: Copy ebsnvme-id utility
      copy:
        src: ebsnvme-id
        dest: /sbin/ebsnvme-id
        owner: "{{ aws_ec2_root_user }}"
        group: "{{ aws_ec2_root_user }}"
        mode: '0755'
      tags:
        - always

    - name: Copy ec2nvme-nsid utility
      copy:
        src: ec2nvme-nsid
        dest: /lib/udev/ec2nvme-nsid
        owner: "{{ aws_ec2_root_user }}"
        group: "{{ aws_ec2_root_user }}"
        mode: '0755'
      tags:
        - always

    - name: Configure nvme devices mapping
      template:
        src: ec2-nvme-devices.rules.jinja2
        dest: "/etc/udev/rules.d/70-ec2-nvme-devices.rules"
      tags:
        - always

    - name: Install and configure system dependencies
      import_role:
        name: system
      tags:
        - system-role
        - always

    - name: LVM support, mount devices
      import_role:
        name: lvm
      vars:
        lvm_volumes:
          - vg_name: vg_data
            lv_name: lv_media
            # Keep in sync with values from provision.yml
            block_device_name: "/dev/xvdf"
            filesystem: ext4
            filesystem_mkfs_opts: ""
            mount: /shared
            mount_opts: "errors=remount-ro,noatime,barrier=0"
      tags:
        - lvm-role
        - always

    - name: Setup postgres service
      import_role:
        name: postgres
      vars:
        pg_setup_cluster: yes
        pg_cluster_dir: "/shared/db/data"
      tags:
        - postgres-role
        - always

    - name: Setup nginx services
      import_role:
        name: nginx
      tags:
        - nginx-role
        - always

    - name: Setup Redis service
      import_role:
        name: DavidWittman.redis
      vars:
        redis_bind: 127.0.0.1
        redis_version: 5.0.5
        redis_checksum: sha256:2139009799d21d8ff94fc40b7f36ac46699b9e1254086299f8d3b223ca54a375
        redis_verify_checksum: true
        redis_service_name: "redis"
        redis_socket_path: "/var/run/redis/{{ redis_port }}.sock"
        redis_socket_perm: 770
        redis_maxmemory: 256mb
        redis_password: 3MUvZ/wV{6e86jq@x4uA%RDn9KbrV#WU]A=L76J@Q9iCa*9+vN
      tags:
        - redis-role
        - always


- name: Setup application for compscicenter.ru
  import_playbook: cs_center.yml
  tags:
    - never
    - app-deployment
    - compscicenter.ru

- name: Setup application for compsciclub.ru
  import_playbook: cs_club.yml
  tags:
    - never
    - app-deployment
    - compsciclub.ru
