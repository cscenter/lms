---
# heavily inspired by:
# https://github.com/tgerla/ansible-aws-examples
# http://answersforaws.com/episodes/2-ansible-and-aws/
# http://halberom.co.uk/setting-up-a-blog-environment-on-aws.html

- name: provision EC2 instance
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/aws.yml
  vars:
    aws_ec2_region: eu-central-1
    aws_ec2_instance_type: t2.small
    aws_ec2_keypair: csc-main
    # Ubuntu 14.04 hvm ssd
    aws_ec2_image: ami-accff2b1

  tasks:
    - name: Create required network security groups
      ec2_group:
        name: "{{ item.name }}"
        description: "{{ item.desc }}"
        rules: "{{ item.rules }}"
        rules_egress: "{{ item.rules_egress }}"
        region: "{{ aws_ec2_region }}"
      with_items: security_groups

    - name: Launch instance
      ec2:
        region: "{{ aws_ec2_region }}"
        keypair: "{{ aws_ec2_keypair }}"
        instance_type: "{{ aws_ec2_instance_type }}"
        image: "{{ aws_ec2_image }}"
        group:
          - web
          - ssh
        instance_tags:
          Name: "{{ aws_ec2_new_instance_tag }}"
        exact_count: 1
        count_tag:
          Name: "{{ aws_ec2_new_instance_tag }}"
        volumes:
          - device_name: /dev/sda1
            volume_size: 20
            volume_type: gp2
        wait: true
      register: ec2

    - name: display info for newly created instance
      debug:
        msg: "{{ ec2 }}"

    - name: display an IP of newly launched instance
      debug:
        msg: "{{ ec2.instances[0].public_ip }}"
      when: ec2.instances|length > 0

    - name: display an id of newly launched instance
      debug:
        msg: "{{ ec2.instances[0].id }}"
      when: ec2.instances|length > 0

    - name: wait for SSH to become available
      local_action:
        wait_for host="{{ ec2.instances[0].public_ip }}" port=22 timeout=600
      when: ec2.instances|length > 0

    - name: add launched instances to host group
      local_action: add_host hostname={{ item.public_ip }} groupname={{ aws_ec2_host_new }}
      with_items: ec2.tagged_instances

    - name: Create new volume and attach it to new EC2 instance
      ec2_vol:
        region: "{{ aws_ec2_region }}"
        instance: "{{ ec2.tagged_instances[0].id }}"
        volume_size: 30
        volume_type: gp2
        device_name: /dev/xvdf
      register: ec2_vol

- name: Setup shared/ Volume
  hosts: "{{ aws_ec2_host_new }}"
  become: yes
  become_user: ubuntu
  vars_files:
    - vars/aws.yml
  roles:
    - lvm
  tags:
    - lvm

  # - name: setup provisioned servers
  #   include: setup.yml

# - name: restore production backup
#   include: restore_backup.yml
