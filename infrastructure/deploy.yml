---
- name: Start deployment
  hosts: "{{ aws_ec2_host_new }}"
  user: ubuntu
#  sudo: True
  vars_files:
    - vars/aws.yml

  tasks:
  - name: Check app_user value
    fail:
      msg: "`app_user` var should be one of [cscenter, csclub]"
    when: app_user != "cscenter" and app_user != "csclub"

  - name: Set variables for better readability
    set_fact:
      site_src: "/home/{{ app_user }}/site/repo"
      venv_dir: "/home/{{ app_user }}/site/env"
      requirements_prev_md5_file: ".requirements_prev_deploy_md5"
      # Default value if file didn't fetched from remote server
      requirements_md5: ""

  - name: Get stuff from git
    git: repo=git@github.com:cscenter/site.git dest={{ site_src }}
    become: yes
    become_user: "{{ app_user }}"

  - name: Get file stats for production requirements.txt
    stat:
      path: "{{ site_src }}/requirements/{{ item }}.txt"
    register: requirements_stat
    with_items:
      - "base"
      - "production"

  - name: Concat md5 from previous step
    set_fact:
      requirements_concated_md5: "{{ requirements_stat.results | map(attribute='stat.md5') | join('') }}"

  - name: Try to fetch file with md5 hash value from previous deploy
    fetch:
      src: "/home/{{ app_user }}/site/{{ requirements_prev_md5_file }}"
      dest: "tmp/{{ inventory_hostname }}_{{ requirements_prev_md5_file }}"
      flat: yes
      fail_on_missing: no
    register: requirements_prev_md5

  - name: Get stats for fetched file
    local_action: stat path="tmp/{{ inventory_hostname }}_{{ requirements_prev_md5_file }}"
    register: local_md5_file

  - name: Try to read requirements md5 value from previous deploy
    set_fact:
      requirements_md5: "{{ lookup('file', 'tmp/{{ inventory_hostname }}_{{ requirements_prev_md5_file }}') }}"
    when: local_md5_file.stat.exists == True

  - name: Install requirements if they were changed from previous deploy
    pip: requirements={{ site_src }}/requirements.txt virtualenv={{ venv_dir }}
    become: yes
    become_user: "{{ app_user }}"
    when: requirements_concated_md5 != requirements_md5

  - name: Update requirements.txt files summary md5 value
    copy:
      content: "{{ requirements_concated_md5 }}"
      dest: "/home/{{ app_user }}/site/{{ requirements_prev_md5_file }}"
    become: yes
    become_user: "{{ app_user }}"
    when: requirements_concated_md5 != requirements_md5

  - name: Collectstatic
    become: yes
    become_user: "{{ app_user }}"
    django_manage:
      command: "collectstatic --noinput"
      app_path: "{{ site_src }}"
      settings: "{{ app_user }}.settings.production"
      virtualenv: "{{ venv_dir }}"

  - name: Migrate DB
    become: yes
    become_user: "{{ app_user }}"
    django_manage:
      command: "migrate"
      app_path: "{{ site_src }}"
      settings: "{{ app_user }}.settings.production"
      virtualenv: "{{ venv_dir }}"

  - name: Touch config file to reload uwsgi
    file: path=/etc/uwsgi/vassals/{{ app_user }}.ini state=touch
    become: yes
    become_method: sudo

  - name: Gracefully kill rq workers to reload their state
    become: yes
    become_method: sudo
    shell: "supervisorctl signal SIGTERM rqworkers:"


