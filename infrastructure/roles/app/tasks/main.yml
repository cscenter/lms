---
- name: Set vars
  set_fact: "{{ item.key }}={{ item.value }}"
  with_dict: "{{ app_config }}"

- name: Start processing user = {{ site_user }}
  debug:
    msg: "{{ app_config }}"

- name: Create users and groups
  include_tasks: users.yml
  tags:
    - users

- name: Create application directory structure
  file:
    path: "/home/{{ site_user }}/site/{{ item }}"
    state: directory
    owner: "{{ site_user }}"
  with_items:
    - logs

- name: clone website repo
  become: yes
  become_user: "{{ site_user }}"
  git:
    accept_hostkey: yes
    repo: "{{ repo_url }}"
    dest: "/home/{{ site_user }}/site/repo"
    key_file: "/home/{{ site_user }}/.ssh/id_rsa"

- name: Ensure folder for file-based cache exists
  file: path=/tmp/django_cache mode=777 state=directory

- name: Nginx status
  stat: path=/etc/init.d/nginx
  register: nginx_status
  tags:
    - nginx

- name: Copy nginx config
  template:
    src: nginx.conf.jinja2
    dest: "/etc/nginx/sites-available/{{ site_user }}.conf"
  tags:
    - nginx
  when: nginx_status.stat.exists

- name: Symlink nginx config
  file:
    src: "/etc/nginx/sites-available/{{ site_user }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ site_user }}.conf"
    state: link
  tags:
    - nginx
  when: nginx_status.stat.exists

- name: Restart nginx
  service:
    name: nginx
    state: restarted
  when: nginx_status.stat.exists

- name: Configure certbot to auto-renew tls certificates
  include_tasks: certbot.yml
  tags:
    - certbot
    - tls
  when: nginx_status.stat.exists and enable_https

- name: Ensure Nginx is started
  service: name=nginx state=started
  when: nginx_status.stat.exists

# FIXME: restart doesn't work right now. Touch config or figure out what's wrong
- name: Install app dependencies
  include_tasks: venv.yml
  notify: restart uwsgi
  tags:
    - venv

- include_tasks: systemd.yml

- name: Copy uwsgi config
  template:
    src: uwsgi.ini.jinja2
    dest: "/etc/uwsgi/vassals/{{ site_user }}.ini"
    owner: "{{ site_user }}"
  notify: restart uwsgi
  tags:
    - uwsgi

- name: Create media/ folder
  file:
    path: "{{ media_root }}"
    state: directory
    owner: "ubuntu"
    group: "{{ site_user_group }}"
    mode: 0775

- name: Create tmp folder for django-dbbackup
  file:
    path: "{{ backup_root }}"
    state: directory
    owner: "ubuntu"
    group: "{{ site_user_group }}"
    mode: 0775

- name: Configure db
  include_tasks: db.yml
  tags:
    - db

- name: Run collectstatic
  become_user: "{{ site_user }}"
  django_manage:
    command: "collectstatic"
    app_path: "/home/{{ site_user }}/site/repo"
    settings: "{{ app_settings }}.settings.{{ app_environment }}"
    virtualenv: "/home/{{ site_user }}/site/env/"
  tags:
    - collectstatic

- name: Set up cron jobs
  include_tasks: cronjobs.yml
  when: setup_cronjobs
  tags:
    - cronjobs
