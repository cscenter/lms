---
- include: apt.yml
- include: pip.yml

- name: Create users and groups
  include: users.yml
  tags:
    - users

- include: stuff.yml

- name: create application directory structure for cscenter site
  file:
    path: "/home/{{ cscenter_user }}/site/{{ item }}"
    state: directory
    owner: "{{ cscenter_user }}"
  with_items:
    - logs
    - env

- name: create application directory structure for csclub site
  file:
    path: "/home/{{ csclub_user }}/site/{{ item }}"
    state: directory
    owner: "{{ csclub_user }}"
  with_items:
    - logs
    - env

- name: clone website repo
  become: yes
  become_user: "{{ cscenter_user }}"
  git:
    accept_hostkey: yes
    repo: git@github.com:cscenter/site.git
    dest: "/home/{{ cscenter_user }}/site/repo"
    key_file: "/home/{{ cscenter_user }}/.ssh/id_rsa"

- name: clone website repo
  become: yes
  become_user: "{{ csclub_user }}"
  git:
    accept_hostkey: yes
    repo: git@github.com:cscenter/site.git
    dest: "/home/{{ csclub_user }}/site/repo"
    key_file: "/home/{{ csclub_user }}/.ssh/id_rsa"

- name: install CSC website deps for cscenter
  become: yes
  become_user: "{{ cscenter_user }}"
  pip:
    requirements: "/home/{{ cscenter_user }}/site/repo/requirements.txt"
    virtualenv: "/home/{{ cscenter_user }}/site/env/"
    virtualenv_python: python3.4

- name: install CSC website deps for csclub
  become: yes
  become_user: "{{ csclub_user }}"
  pip:
    requirements: "/home/{{ csclub_user }}/site/repo/requirements.txt"
    virtualenv: "/home/{{ csclub_user }}/site/env/"
    virtualenv_python: python3.4

- name: Copy upstart uwsgi config
  template:
    src: uwsgi-upstart.tmpl
    dest: /etc/init/uwsgi.conf
  tags:
    - uwsgi

- name: create uwsgi config dir
  file: path=/etc/uwsgi/vassals state=directory

- name: copy uwsgi configs
  template:
    src: uwsgi.ini.tmpl
    dest: "/etc/uwsgi/vassals/{{ item }}.ini"
    owner: "{{ item }}"
  notify: restart uwsgi
  with_items:
    - "{{ cscenter_user }}"
    - "{{ csclub_user }}"
  tags:
    - uwsgi

- name: Run collectstatic for both apps
  sudo_user: "{{ item }}"
  django_manage:
    command: "collectstatic"
    app_path: "/home/{{ item }}/site/repo"
    settings: "{{ item }}.settings.production"
    virtualenv: "/home/{{ item }}/site/env/"
  with_items:
    - "{{ cscenter_user }}"
    - "{{ csclub_user }}"
  tags:
    - collectstatic

- name: Create shared media/ folder
  file:
    path: "/shared/media"
    state: directory
    owner: "ubuntu"
    group: "{{ group_shared }}"
    mode: 0775

- name: Create tmp folder for django-dbbackup
  file:
    path: "/shared/backup_tmp"
    state: directory
    owner: "ubuntu"
    group: "{{ group_shared }}"
    mode: 0775

- name: Process db
  include: db.yml
  tags:
    - db
- include: cronjobs.yml
  tags:
    - cronjobs

