---
# TODO: restart uwsgi, restart rqworkers (!)

- name: Check if python is installed
  package:
    name: "{{ python_pkg }}"
    state: present
  check_mode: true
  register: python_installed

- name: Get stat about virtualenv directory
  stat:
    path: "/home/{{ site_user }}/site/env/"
  register: venv_dir

- name: Get virtualenv python version if venv already exists
  shell: "/home/{{ site_user }}/site/env/bin/python --version 2>&1"
  register: python_venv_version_installed
  when: venv_dir.stat.exists

- name: Get current python 3.x version
  shell: "{{ python_pkg }} --version 2>&1"
  register: python_version_installed

- name: Remove venv if version has changed
  file:
    path: "/home/{{ site_user }}/site/env/"
    state: absent
  when: venv_dir.stat.exists and python_venv_version_installed.stdout != python_version_installed.stdout

- name: Install pipenv inside virtual environment
  become: yes
  become_user: "{{ site_user }}"
  pip:
    name: "pipenv"
    virtualenv: "/home/{{ site_user }}/site/env/"
    virtualenv_python: "{{ python_pkg }}"

- name: Install packages from project Pipenv.lock
    environment:
      VIRTUAL_ENV: "{{ venv_dir }}"
    command: "{{ venv_dir }}/bin/pipenv sync"
    args:
      chdir: "{{ repo_dir }}"
    become: yes
    become_user: "{{ site_user }}"

- name: Prevent python from being upgraded with `apt-get upgrade` (it can broke venv)
  dpkg_selections:
    name: "{{ python_pkg }}"
    selection: hold