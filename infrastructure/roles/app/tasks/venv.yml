---
# TODO: restart uwsgi, restart rqworkers (!)
- name: Add python PPAs
  apt_repository:
    repo: "{{ item }}"
    update_cache: yes
  with_items:
    - 'ppa:deadsnakes/ppa'

- name: Check if python is installed
  package:
    name: "{{ python_pkg }}"
    state: present
  check_mode: true
  register: python_installed

- name: Unlock python package for upgrade if it was hold before.
  dpkg_selections:
    name: "{{ python_pkg }}"
    selection: install
  when: not python_installed.changed

# Note: Suppose venv versions are the same for cscenter and csclub sites
- name: Get stat about virtualenv directory
  stat:
    path: "/home/{{ cscenter_user }}/site/env/"
  register: venv_dir

- name: Get virtualenv python version if venv already exists
  shell: "/home/{{ cscenter_user }}/site/env/bin/python --version 2>&1"
  register: python_venv_version_installed
  when: venv_dir.stat.exists

- name: install python and app deps
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - gettext
    # regular expressions support
    - libpcre3
    - libpcre3-dev
    - libxml2-dev
    - libxslt1-dev
    - libjpeg-dev
    - libpng-dev
    - libmagic-dev
    - libcurl4-gnutls-dev
    - "{{ python_pkg }}"
    - "{{ python_pkg }}-dev"
    - python3-pip
    - python-pycurl

- name: install global Python 3 stuff
  pip:
    executable: "pip3"
    name: "{{ item.name }}"
    version: "{{ item.version }}"
  with_items:
    - name: uwsgi
      version: "2.0.15"
    - name: uwsgitop
      version: "0.10"

- name: Get current python 3.x version
  shell: "{{ python_pkg }} --version 2>&1"
  register: python_version_installed

- name: Remove venv if version has changed (cscenter)
  file:
    path: "/home/{{ cscenter_user }}/site/env/"
    state: absent
  when: venv_dir.stat.exists and python_venv_version_installed.stdout != python_version_installed.stdout

- name: Install CSC website deps for cscenter
  become: yes
  become_user: "{{ cscenter_user }}"
  pip:
    requirements: "/home/{{ cscenter_user }}/site/repo/requirements.txt"
    virtualenv: "/home/{{ cscenter_user }}/site/env/"
    virtualenv_python: "{{ python_pkg }}"

- name: Remove venv if version has changed (csclub)
  file:
    path: "/home/{{ csclub_user }}/site/env/"
    state: absent
  when: venv_dir.stat.exists and python_venv_version_installed.stdout != python_version_installed.stdout

- name: Install CSC website deps for csclub
  become: yes
  become_user: "{{ csclub_user }}"
  pip:
    requirements: "/home/{{ csclub_user }}/site/repo/requirements.txt"
    virtualenv: "/home/{{ csclub_user }}/site/env/"
    virtualenv_python: "{{ python_pkg }}"
  tags:
    - csclub

- name: Prevent python from being easily upgraded with `apt-get upgrade` (it can broke venv)
  dpkg_selections:
    name: "{{ python_pkg }}"
    selection: hold