# {{ ansible_managed }}
upstream django_{{ site_user }} {
    server unix:///tmp/uwsgi_{{ site_dir_name }}.socket;
}

{% if enable_https -%}
server {
    listen 80;
    server_name {{ certbot_domains|join(' ') }};

    location /.well-known/acme-challenge/ {
        alias {{ repo_root }}/.well-known/acme-challenge/;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

{%- set main_domain_parts = main_domain.split('.') %}
{% if main_domain_parts|length == 2 %}
# Redirect from `www.` to the domain without `www`
server {
    listen 443 ssl;
    server_name www.{{ main_domain }};

    # Make sure to update ansible regexp for uncommenting ssl certificates paths if https is enabled.
    # ssl_certificate {{ certbot_config_dir }}/{{ certbot_cert_filename }};
    # ssl_certificate_key {{ certbot_config_dir }}/{{ certbot_privkey_filename }};
    # Fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    return 301 https://{{ main_domain }}$request_uri;
}
{% endif -%}
{% endif %}

server {
    listen {% if enable_https %}443 ssl http2{% else %}80{% endif %} default_server;
    server_name {{ main_domain }}{% if hosts_override is defined and hosts_override == 'vagrant-test-hosts' %} csc.vagrant{% endif %};

    charset utf-8;
    client_max_body_size 42m;

    {% if enable_https -%}
        {% filter indent(width=4) %}
            {% include 'compscicenter.ru/_nginx.ssl.jinja2' %}
        {% endfilter %}
    {% endif -%}

    resolver 8.8.8.8;

    error_page 404 =404 @show_404;

    location @show_404 {
        root {{ repo_root }}/{{ apps_dir_name }}/templates/;
        try_files /errors/404.html =404;
    }

    rewrite ^/lectures/$ https://open.compscicenter.ru/ redirect;
    rewrite ^/open/$ https://open.compscicenter.ru/ redirect;
    rewrite ^/learning/(.*)$ https://my.{{ main_domain }}/learning/$1 redirect;
    rewrite ^/teaching/(.*)$ https://my.{{ main_domain }}/teaching/$1 redirect;

    {% filter indent(width=4) -%}
    {% include 'compscicenter.ru/_nginx.locations.jinja2' %}
    {% endfilter %}

    # Django
    location / {
        set $frame_options '';
        if ($http_referer !~ '^https?:\/\/([^\/]+\.)?(compscicenter\.ru|webvisor\.com)\/'){
            set $frame_options 'SAMEORIGIN';
        }
        add_header X-Frame-Options $frame_options;
        add_header Cache-Control no-cache,no-store,must-revalidate;

        # FIXME(Dmitry): this makes TLS vulnerable to BREACH attack
        gzip on;
        # Serve 30x statuses with nginx
        uwsgi_intercept_errors on;
        uwsgi_pass django_{{ site_user }};
        include uwsgi_params;
    }
}
