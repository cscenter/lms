# {{ ansible_managed }}
upstream django_{{ site_user }} {
    server unix:///tmp/uwsgi_{{ site_dir_name }}.socket;
}
{% if enable_https %}
server {
    listen 80;
    server_name {{ certbot_domains|join(' ') }};

    location /.well-known/acme-challenge/ {
        alias {{ repo_root }}/.well-known/acme-challenge/;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

{%- set main_domain_parts = main_domain.split('.') -%}
{% if main_domain_parts|length == 2 %}

# Redirect from `www.` to domain without `www`
server {
    listen 443 ssl;
    server_name www.{{ main_domain }};
    {# ssl certificates paths will be uncomment by certbot tasks #}
    # ssl_certificate {{ certbot_config_dir }}/{{ certbot_cert_filename }};
    # ssl_certificate_key {{ certbot_config_dir }}/{{ certbot_privkey_filename }};
    # Fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    return 301 https://{{ main_domain }}$request_uri;
}
{% endif -%}
{% endif %}

server {
    listen {% if enable_https %}443 ssl http2{% else %}80{% endif %};
    server_name{% for domain in certbot_domains -%}
        {% if not domain.startswith("www") %} {{ domain }}{% endif %}
    {%- endfor %};

    charset utf-8;
    client_max_body_size 42m;

    {% if enable_https -%}
        {% filter indent(width=4) %}
            {% include '_nginx.ssl.jinja2' %}
        {% endfilter %}
    {% endif %}

    resolver 8.8.8.8;

    error_page 404 =404 @show_404;

    location @show_404 {
        root {{ repo_root }}/{{ apps_dir_name }}/templates/;
        try_files /errors/404.html =404;
    }

    location /media/  {
        root /shared;
        access_log off;
        tcp_nodelay off;
        # gzip_static on;
        gzip on;
        expires 6h;
        add_header Cache-Control public,max-age=21600;
        {% filter indent(width=4) %}
            {% include '_nginx.hsts.jinja2' %}
        {% endfilter %}

        location /media/assignments/ {
            internal;
        }
    }

    location /static {
        alias {{ static_root }};
        access_log off;
        tcp_nodelay off;
        gzip_static on;
        gzip on;
        gzip_min_length 1100;
        gzip_types text/css text/javascript application/javascript;
        expires 1M;
        add_header Cache-Control public,max-age=2592000;
        {% filter indent(width=4) %}
            {% include '_nginx.hsts.jinja2' %}
        {% endfilter %}
    }

    location = /en/raa18/ {
        proxy_pass https://logic.pdmi.ras.ru/~kulikov/raa18/raa18.html;
    }

    location /scs/ {
        return 302 http://52.15.239.252/scs;
    }

    location = /algorithms {
        return 302 http://learningalgorithms.tilda.ws/;
    }

    location ~ ^/apple-touch-icon(|-\d+x\d+)(|-precomposed).png {
        return 204;
        log_not_found off;
    }

    # Django
    location / {
        add_header Cache-Control no-cache,no-store,must-revalidate;
        {% filter indent(width=4) %}
            {% include '_nginx.hsts.jinja2' %}
        {% endfilter %}
        # FIXME(Dmitry): this makes TLS vulnerable to BREACH attack
        gzip on;
        # Serve 30x statuses with nginx
        uwsgi_intercept_errors on;
        uwsgi_pass django_{{ site_user }};
        include uwsgi_params;
    }
}
