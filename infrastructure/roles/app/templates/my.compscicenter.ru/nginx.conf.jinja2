# {{ ansible_managed }}
{% from '_nginx.cors.jinja2' import common_cors_headers %}

server {
    listen {% if enable_https %}443 ssl http2{% else %}80{% endif %};
    server_name my.{{ main_domain }}{% if hosts_override is defined and hosts_override == 'vagrant-test-hosts' %} my.csc.vagrant{% endif %};

    charset utf-8;
    client_max_body_size 42m;

    {% if enable_https -%}
        {% filter indent(width=4) %}
            {% include '_nginx.ssl.jinja2' %}
        {% endfilter %}
    {% endif %}

    resolver 8.8.8.8;

    error_page 404 =404 @show_404;

    location @show_404 {
        root {{ repo_root }}/{{ apps_dir_name }}/templates/;
        try_files /errors/404.html =404;
    }

    {% filter indent(width=4) -%}
    {% include '_nginx.locations.jinja2' %}
    {% endfilter %}


    # Django
    location / {
        {% if CORS_enabled %}
            {{ common_cors_headers() }}
            if ($request_method = 'OPTIONS') {
                {{ common_cors_headers() }}
                add_header Access-Control-Allow-Methods "$cors_allow_methods";
                add_header Access-Control-Allow-Headers "$cors_allow_headers";
                add_header 'Access-Control-Max-Age' "$cors_access_control_max_age";
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        {% endif %}

        add_header X-Frame-Options $frame_options;
        add_header Cache-Control no-cache,no-store,must-revalidate;

        {% filter indent(width=4) %}
            {% include '_nginx.hsts.jinja2' %}
        {% endfilter %}

        # FIXME(Dmitry): this makes TLS vulnerable to BREACH attack
        gzip on;
        # Serve 30x statuses with nginx
        uwsgi_intercept_errors on;
        uwsgi_pass django_{{ site_user }};
        include uwsgi_params;
    }
}
