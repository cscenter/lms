- name: Setup ec2 instance for cscenter and csclub website
  hosts: "tag_Name_csc_dev"
  user: ubuntu
  become: yes
  become_method: sudo
  vars_files:
    - vars/aws.yml
    - roles/app/vars/main.yml
  vars:
    app_environment: dev
    db_name: test_cscdb
  roles:
    - role: app
      app_environment: dev

    - role: DavidWittman.redis
      redis_bind: 127.0.0.1
      redis_group: "{{ group_shared }}"
      redis_version: 3.2.3
      redis_verify_checksum: true
      redis_socket_path: "/var/run/redis/{{ redis_port }}.sock"
      redis_socket_perm: 770
      redis_maxmemory: 64mb
      redis_password: false

    - role: supervisord
      supervisor_version: 3.3.1
      supervisor_programs_present:
        rqworker_default:
          command: "/home/{{ cscenter_user }}/site/env/bin/python /home/{{ cscenter_user }}/site/repo/manage.py rqworker default --settings={{ cscenter_user }}.settings.{{ app_environment }} --pythonpath='/home/{{ cscenter_user }}/site/repo/cscsite' --worker-class='core.queue.CustomRQWorker'"
          autostart: true
          autorestart: true
          startretries: 3
          stdout_logfile: "/home/{{ cscenter_user }}/site/logs/rqworker_default.log"
          stdout_logfile_maxbytes: 50MB
          redirect_stderr: true
          user: "{{ cscenter_user }}"
          numprocs: 1
          process_name: "%(program_name)s-%(process_num)s"
        rqworker_high:
          command: "/home/{{ cscenter_user }}/site/env/bin/python /home/{{ cscenter_user }}/site/repo/manage.py rqworker high --settings={{ cscenter_user }}.settings.{{ app_environment }} --pythonpath='/home/{{ cscenter_user }}/site/repo/cscsite' --worker-class='core.queue.CustomRQWorker'"
          autostart: true
          autorestart: true
          startretries: 3
          stdout_logfile: "/home/{{ cscenter_user }}/site/logs/rqworker_high.log"
          stdout_logfile_maxbytes: 50MB
          redirect_stderr: true
          user: "{{ cscenter_user }}"
          numprocs: 1
          process_name: "%(program_name)s-%(process_num)s"
      supervisor_groups_present:
        rqworkers:
          programs:
            - rqworker_default
            - rqworker_high
          priority: 10
      supervisor_superlance: true
      supervisor_events_email_to: "webmaster@compscicenter.ru"
      supervisor_events:
        # Restart process if it's allocate more then 100MB
        - name: memmon
          command: memmon -g rqworkers=100MB -m {{ supervisor_events_email_to }}
          events: TICK_60
          process_name: memmon
        # Send email if all attempts to restart process are failed
        # FIXME: disable, should test first
#        - name: fatalmailbatch
#          command: fatalmailbatch --toEmail {{ supervisor_events_email_to }}
#          events: PROCESS_STATE_FATAL
#          process_name: fatalmailbatch

    - role: nginx
      enable_https: no