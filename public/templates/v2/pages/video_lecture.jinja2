{% extends "v2/layouts/inner.jinja2" %}

{% block content %}
    <div class="container page-content">
        <div class="row">
            <div class="col-lg-9">
                <a href="/v2/pages/projects/" class="text-small text-muted">Видеозаписи /</a>
                <h1>Современный С++: новые возможности и лучшие методологии (часть 1)</h1>
                <section class="content-block">
                    {{ macros.video_iframe(url="https://www.youtube.com/embed/A3SomwRa5iw") }}
                    <div class="external-links">
                        <a href="#" target="_blank" rel="noopener">{{ macros.svg_icon('slides') }}<span>Слайды с лекции</span></a>
                    </div>
                </section>
                <section class="content-block">
                    <h3>Лектор</h3>
                    <div class="row mb-3">
                        <div class="col-lg-4">
                            <div class="author _project">
                                <img class="author__img" width="48" height="48" src="/media/pages/index/student.png"
                                     alt="">
                                <div class="author__details">
                                    <h4>Валерий Лесин</h4>
                                    <span>SimLabs, СПб АУ РАН</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <p>Валерий Лесин — технический директор СимЛабс, преподаватель С++, а также руководитель НИРов в CS
                        центре и
                        Академическом университете.
                    </p>
                </section>
                <section class="content-block">
                    <h3>Описание</h3>
                    <p>Программы на С++ ценят за их эффективность в использовании ресурсов. Но это же становится и
                        проблемой,
                        поскольку сложность перекладывается на программиста, который должен сам следить за их
                        своевременным
                        освобождением. Если добавить еще и неожиданно вылетающие исключения, то программирование вообще
                        может
                        превратиться в хождение по минному полю. В первой части/лекции будут рассмотрены несколько
                        приемов,
                        позволяющие существенно упростить жизнь и, наконец, избавиться от головной боли, как и когда
                        освобождать
                        ресурсы, а также как их эффективно передавать: от идиомы RAII до move-семантики и rvalue ссылок.
                    </p>
                </section>
            </div>
        </div>
    </div>
{% endblock content %}
