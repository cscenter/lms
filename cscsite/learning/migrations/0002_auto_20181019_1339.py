# Generated by Django 2.1.1 on 2018-10-19 13:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('learning', '0001_initial'),
        ('sites', '0002_alter_domain_unique'),
        ('core', '0002_auto_20180730_1437'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='studentassignment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='StudentAssignment|student'),
        ),
        migrations.AlterUniqueTogether(
            name='semester',
            unique_together={('year', 'type')},
        ),
        migrations.AddField(
            model_name='noncourseevent',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.Venue', verbose_name='CourseClass|Venue'),
        ),
        migrations.AddField(
            model_name='internshipcategory',
            name='site',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sites.Site', verbose_name='Site'),
        ),
        migrations.AddField(
            model_name='internship',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.InternshipCategory', verbose_name='Internship category'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='course_offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.CourseOffering', verbose_name='Course offering'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='courseofferingteacher',
            name='course_offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.CourseOffering'),
        ),
        migrations.AddField(
            model_name='courseofferingteacher',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='courseofferingnewsnotification',
            name='course_offering_news',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.CourseOfferingNews', verbose_name='Course offering news'),
        ),
        migrations.AddField(
            model_name='courseofferingnewsnotification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='courseofferingnews',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='courseofferingnews',
            name='course_offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.CourseOffering', verbose_name='Course offering'),
        ),
        migrations.AddField(
            model_name='courseoffering',
            name='city',
            field=models.ForeignKey(default='spb', on_delete=django.db.models.deletion.PROTECT, to='core.City', verbose_name='City'),
        ),
        migrations.AddField(
            model_name='courseoffering',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.Course', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='courseoffering',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.Semester', verbose_name='Semester'),
        ),
        migrations.AddField(
            model_name='courseoffering',
            name='teachers',
            field=models.ManyToManyField(related_name='teaching_set', through='learning.CourseOfferingTeacher', to=settings.AUTH_USER_MODEL, verbose_name='Course|teachers'),
        ),
        migrations.AddField(
            model_name='courseclassattachment',
            name='course_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.CourseClass', verbose_name='Class'),
        ),
        migrations.AddField(
            model_name='courseclass',
            name='course_offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.CourseOffering', verbose_name='Course offering'),
        ),
        migrations.AddField(
            model_name='courseclass',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.Venue', verbose_name='CourseClass|Venue'),
        ),
        migrations.AddField(
            model_name='assignmentnotification',
            name='student_assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.StudentAssignment', verbose_name='student_assignment'),
        ),
        migrations.AddField(
            model_name='assignmentnotification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='assignmentcomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='assignmentcomment',
            name='student_assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.StudentAssignment', verbose_name='AssignmentComment|student_assignment'),
        ),
        migrations.AddField(
            model_name='assignmentattachment',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.Assignment', verbose_name='Assignment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='assigned_to',
            field=models.ManyToManyField(blank=True, through='learning.StudentAssignment', to=settings.AUTH_USER_MODEL, verbose_name='Assignment|assigned_to'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course_offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='learning.CourseOffering', verbose_name='Course offering'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='notify_teachers',
            field=models.ManyToManyField(blank=True, help_text='Leave blank if you want populate teachers from course offering settings', to='learning.CourseOfferingTeacher', verbose_name='Assignment|notify_settings'),
        ),
        migrations.AlterUniqueTogether(
            name='studentassignment',
            unique_together={('assignment', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('student', 'course_offering')},
        ),
        migrations.AlterUniqueTogether(
            name='courseofferingteacher',
            unique_together={('teacher', 'course_offering')},
        ),
        migrations.AlterUniqueTogether(
            name='courseoffering',
            unique_together={('course', 'semester', 'city')},
        ),
    ]
