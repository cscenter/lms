# Generated by Django 2.1.1 on 2018-10-08 09:52

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('learning', '0020_auto_20180903_1354'),
    ]

    operations = [
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('input_name', models.CharField(blank=True, max_length=255, verbose_name='Input Name')),
                ('order', models.IntegerField(blank=True, null=True, verbose_name='Order')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('required', models.BooleanField(default=True, verbose_name='Required')),
                ('field_type', models.SmallIntegerField(choices=[(1, 'Single line text'), (2, 'Multi line text'), (3, 'Email'), (13, 'Number'), (14, 'URL'), (4, 'Check box'), (5, 'Check boxes'), (6, 'Drop down'), (7, 'Multi select'), (8, 'Radio buttons'), (10, 'Date'), (11, 'Date/time')], verbose_name='Field Type')),
                ('placeholder', models.CharField(blank=True, max_length=255, null=True, verbose_name='Placeholder')),
                ('css_class', models.CharField(blank=True, max_length=255, verbose_name='Widget classes')),
                ('visibility', models.SmallIntegerField(choices=[(0, 'Hidden'), (1, 'Visible')], default=1, verbose_name='Visibility')),
                ('help_text', models.TextField(blank=True, null=True, verbose_name='Help Text')),
                ('error_message', models.CharField(blank=True, max_length=255, null=True, verbose_name='Error Message')),
                ('conditional_logic', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Conditional Logic')),
                ('free_answer', models.BooleanField(default=False, verbose_name='Free Answer')),
            ],
            options={
                'verbose_name': 'Field',
                'verbose_name_plural': 'Fields',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('order', models.IntegerField(blank=True, null=True, verbose_name='Order')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('value', models.CharField(max_length=255, verbose_name='Value')),
                ('default', models.BooleanField(default=False, verbose_name='Default')),
                ('free_answer', models.BooleanField(default=False, help_text='Shows additional input for free answer if user selected this variant.', verbose_name='Free Answer')),
                ('field', models.ForeignKey(limit_choices_to={'field_type__in': [5, 6, 7, 8]}, on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='surveys.Field')),
            ],
            options={
                'verbose_name': 'Field Choice',
                'verbose_name_plural': 'Field Choices',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.IntegerField()),
                ('value', models.CharField(max_length=255, null=True)),
                ('meta', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Meta')),
            ],
            options={
                'verbose_name': 'Form Submission Entry',
                'verbose_name_plural': 'Form Submission Entries',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('status', models.SmallIntegerField(choices=[(0, 'Draft'), (1, 'Published')], default=1, verbose_name='Status')),
                ('publish_at', models.DateTimeField(blank=True, help_text="With published selected, won't be shown until this time.", null=True, verbose_name='Published from')),
                ('expire_at', models.DateTimeField(blank=True, help_text="With published selected, won't be shown after this time.", null=True, verbose_name='Expires on')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('response', models.TextField(blank=True, help_text='Shows this message after submitting form.', verbose_name='Response Message')),
                ('is_template', models.BooleanField(default=False, verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
            ],
            options={
                'verbose_name': 'Form Submission',
                'verbose_name_plural': 'Form Submissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseOfferingSurvey',
            fields=[
                ('form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='course_form', serialize=False, to='surveys.Form')),
                ('type', models.CharField(choices=[('middle', 'Middle'), ('final', 'Final')], max_length=20, verbose_name='Type')),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='learning.CourseOffering')),
            ],
            options={
                'verbose_name': 'Course Survey',
                'verbose_name_plural': 'Course Surveys',
            },
        ),
        migrations.AddField(
            model_name='formsubmission',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='surveys.Form'),
        ),
        migrations.AddField(
            model_name='fieldentry',
            name='form',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='surveys.Form'),
        ),
        migrations.AddField(
            model_name='fieldentry',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='surveys.FormSubmission'),
        ),
        migrations.AddField(
            model_name='field',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='surveys.Form'),
        ),
    ]
