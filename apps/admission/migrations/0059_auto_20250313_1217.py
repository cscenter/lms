# Generated by Django 3.2.18 on 2025-03-13 12:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admission', '0058_auto_20250311_1430'),
    ]

    operations = [
        migrations.AlterField(
            model_name='applicant',
            name='status',
            field=models.CharField(blank=True, choices=[('rejected_form_check', 'Rejected by form check'), ('golden_ticket', 'Golden ticket from the previous year'), ('rejected_cheating', 'Cheating'), ('rejected_test', 'Rejected by test'), ('permit_to_olympiad', 'Permitted to the olympiad'), ('permit_to_exam', 'Permitted to the exam'), ('passed_olympiad', 'Passed the olympiad'), ('failed_olympiad', 'Failed the olympiad, will write the exam'), ('reject_exam_cheater', 'Rejected by exam cheating'), ('rejected_exam', 'Rejected by exam'), ('passed_exam', 'Passed the exam'), ('rejected_interview', 'Rejected by interview'), ('rejected_with_bonus', 'Rejected by interview. Offered a bonus'), ('accept', 'Accept'), ('accept_if', 'Accept with condition'), ('they_refused', 'He or she refused'), ('permit_to_intensive', 'Permitted to the intensive'), ('pending', 'Pending'), ('rejected_intensive', 'Rejected by intensive'), ('rejected_intensive_bonus', 'Rejected by intensive. Offered a bonus'), ('accept_paid', 'Accept on paid'), ('entering_masters_preselect', "Entering the master's program (pre-selection)"), ('passed_exam_preselect', 'Passed the exam (pre-selection)'), ('rejected_exam_preselect', 'Rejected by exam (pre-selection)'), ('recommended_masters_preselect', "Recommended for the master's program (pre-selection)"), ('rejected_interview_preselect', 'Rejected by interview (pre-selection)'), ('accepted_masters_preselect', "Accepted for the master's program (pre-selection)"), ('rejected_masters_preselect', "Refused to enroll the master's program (pre-selection)")], max_length=30, null=True, verbose_name='Applicant|Status'),
        ),
        migrations.CreateModel(
            name='ApplicantStatusLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('changed_at', models.DateField(default=django.utils.timezone.now, verbose_name='Entry Added')),
                ('former_status', models.CharField(blank=True, choices=[('rejected_form_check', 'Rejected by form check'), ('golden_ticket', 'Golden ticket from the previous year'), ('rejected_cheating', 'Cheating'), ('rejected_test', 'Rejected by test'), ('permit_to_olympiad', 'Permitted to the olympiad'), ('permit_to_exam', 'Permitted to the exam'), ('passed_olympiad', 'Passed the olympiad'), ('failed_olympiad', 'Failed the olympiad, will write the exam'), ('reject_exam_cheater', 'Rejected by exam cheating'), ('rejected_exam', 'Rejected by exam'), ('passed_exam', 'Passed the exam'), ('rejected_interview', 'Rejected by interview'), ('rejected_with_bonus', 'Rejected by interview. Offered a bonus'), ('accept', 'Accept'), ('accept_if', 'Accept with condition'), ('they_refused', 'He or she refused'), ('permit_to_intensive', 'Permitted to the intensive'), ('pending', 'Pending'), ('rejected_intensive', 'Rejected by intensive'), ('rejected_intensive_bonus', 'Rejected by intensive. Offered a bonus'), ('accept_paid', 'Accept on paid'), ('entering_masters_preselect', "Entering the master's program (pre-selection)"), ('passed_exam_preselect', 'Passed the exam (pre-selection)'), ('rejected_exam_preselect', 'Rejected by exam (pre-selection)'), ('recommended_masters_preselect', "Recommended for the master's program (pre-selection)"), ('rejected_interview_preselect', 'Rejected by interview (pre-selection)'), ('accepted_masters_preselect', "Accepted for the master's program (pre-selection)"), ('rejected_masters_preselect', "Refused to enroll the master's program (pre-selection)")], max_length=30, null=True, verbose_name='Former status')),
                ('status', models.CharField(blank=True, choices=[('rejected_form_check', 'Rejected by form check'), ('golden_ticket', 'Golden ticket from the previous year'), ('rejected_cheating', 'Cheating'), ('rejected_test', 'Rejected by test'), ('permit_to_olympiad', 'Permitted to the olympiad'), ('permit_to_exam', 'Permitted to the exam'), ('passed_olympiad', 'Passed the olympiad'), ('failed_olympiad', 'Failed the olympiad, will write the exam'), ('reject_exam_cheater', 'Rejected by exam cheating'), ('rejected_exam', 'Rejected by exam'), ('passed_exam', 'Passed the exam'), ('rejected_interview', 'Rejected by interview'), ('rejected_with_bonus', 'Rejected by interview. Offered a bonus'), ('accept', 'Accept'), ('accept_if', 'Accept with condition'), ('they_refused', 'He or she refused'), ('permit_to_intensive', 'Permitted to the intensive'), ('pending', 'Pending'), ('rejected_intensive', 'Rejected by intensive'), ('rejected_intensive_bonus', 'Rejected by intensive. Offered a bonus'), ('accept_paid', 'Accept on paid'), ('entering_masters_preselect', "Entering the master's program (pre-selection)"), ('passed_exam_preselect', 'Passed the exam (pre-selection)'), ('rejected_exam_preselect', 'Rejected by exam (pre-selection)'), ('recommended_masters_preselect', "Recommended for the master's program (pre-selection)"), ('rejected_interview_preselect', 'Rejected by interview (pre-selection)'), ('accepted_masters_preselect', "Accepted for the master's program (pre-selection)"), ('rejected_masters_preselect', "Refused to enroll the master's program (pre-selection)")], max_length=30, null=True, verbose_name='Status')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_logs', to='admission.applicant', verbose_name='Applicant')),
                ('entry_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Applicant Status Log',
                'verbose_name_plural': 'Applicant Status Logs',
                'ordering': ['-changed_at', '-pk'],
            },
        ),
    ]
