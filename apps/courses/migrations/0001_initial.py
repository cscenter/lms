# Generated by Django 2.2.4 on 2019-08-30 08:14

import bitfield.models
import core.mixins
import core.timezone.models
import courses.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('deadline_at', models.DateTimeField(verbose_name='Assignment|deadline')),
                ('is_online', models.BooleanField(default=True, verbose_name='Assignment|can be passed online')),
                ('title', models.CharField(max_length=140, verbose_name='Assignment|name')),
                ('text', models.TextField(help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='Assignment|text')),
                ('passing_score', models.PositiveSmallIntegerField(default=2, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Passing score')),
                ('maximum_score', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Maximum score')),
                ('weight', models.DecimalField(decimal_places=2, default=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Problem Weight')),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'ordering': ['created', 'course'],
            },
            bases=(core.timezone.models.TimezoneAwareModel, models.Model),
        ),
        migrations.CreateModel(
            name='AssignmentAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('attachment', models.FileField(max_length=150, upload_to=courses.models.task_attachment_upload_to)),
            ],
            options={
                'verbose_name': 'Assignment attachment',
                'verbose_name_plural': 'Assignment attachments',
                'ordering': ['assignment', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('grading_type', models.SmallIntegerField(choices=[(0, 'Default'), (1, 'Binary')], default=0, verbose_name='CourseOffering|grading_type')),
                ('capacity', models.PositiveSmallIntegerField(default=0, help_text='0 - unlimited', verbose_name='CourseOffering|capacity')),
                ('completed_at', models.DateField(blank=True, help_text='Consider the course as completed from the specified day (inclusive).', verbose_name='Date of completion')),
                ('description', models.TextField(blank=True, help_text='LaTeX+Markdown+HTML is enabled; empty description will be replaced by course description', verbose_name='Description')),
                ('description_ru', models.TextField(blank=True, help_text='LaTeX+Markdown+HTML is enabled; empty description will be replaced by course description', null=True, verbose_name='Description')),
                ('description_en', models.TextField(blank=True, help_text='LaTeX+Markdown+HTML is enabled; empty description will be replaced by course description', null=True, verbose_name='Description')),
                ('survey_url', models.URLField(blank=True, help_text='Leave empty if you want to fetch survey url from DB', verbose_name='Survey URL')),
                ('online_course_url', models.URLField(blank=True, verbose_name='Online Course URL')),
                ('is_published_in_video', models.BooleanField(default=False, verbose_name='Published in video section')),
                ('is_open', models.BooleanField(default=False, help_text='This course offering will be available on ComputerScience Club website so anyone can join', verbose_name='Open course offering')),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('en', 'English')], db_index=True, default='ru', max_length=5)),
                ('videos_count', models.PositiveIntegerField(default=0, editable=False)),
                ('materials_slides', models.BooleanField(default=False, editable=False)),
                ('materials_files', models.BooleanField(default=False, editable=False)),
                ('youtube_video_id', models.CharField(blank=True, editable=False, help_text='Helpful for getting thumbnail on /videos/ page', max_length=255)),
                ('learners_count', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'verbose_name': 'Course offering',
                'verbose_name_plural': 'Course offerings',
                'ordering': ['-semester', 'meta_course__created'],
            },
            bases=(core.timezone.models.TimezoneAwareModel, models.Model, core.mixins.DerivableFieldsMixin),
        ),
        migrations.CreateModel(
            name='CourseClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.CharField(choices=[('lecture', 'Lecture'), ('seminar', 'Seminar')], max_length=100, verbose_name='Type')),
                ('name', models.CharField(max_length=255, verbose_name='CourseClass|Name')),
                ('description', models.TextField(blank=True, help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='Description')),
                ('slides', models.FileField(blank=True, max_length=200, upload_to=courses.models.course_class_slides_upload_to, verbose_name='Slides')),
                ('slides_url', models.URLField(blank=True, verbose_name='SlideShare URL')),
                ('video_url', models.URLField(blank=True, help_text='Both YouTube and Yandex Video are supported', verbose_name='Video URL')),
                ('other_materials', models.TextField(blank=True, help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='CourseClass|Other materials')),
                ('date', models.DateField(verbose_name='Date')),
                ('starts_at', models.TimeField(verbose_name='Starts at')),
                ('ends_at', models.TimeField(verbose_name='Ends at')),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['-date', 'course', '-starts_at'],
            },
            bases=(core.timezone.models.TimezoneAwareModel, models.Model),
        ),
        migrations.CreateModel(
            name='CourseClassAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('material', models.FileField(max_length=200, upload_to=courses.models.course_class_attachment_upload_to)),
            ],
            options={
                'verbose_name': 'Class attachment',
                'verbose_name_plural': 'Class attachments',
                'ordering': ['course_class', '-created'],
            },
            bases=(core.timezone.models.TimezoneAwareModel, models.Model),
        ),
        migrations.CreateModel(
            name='CourseNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=140, verbose_name='CourseNews|title')),
                ('text', models.TextField(help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='CourseNews|text')),
            ],
            options={
                'verbose_name': 'Course news-singular',
                'verbose_name_plural': 'Course news-plural',
                'ordering': ['-created'],
            },
            bases=(core.timezone.models.TimezoneAwareModel, models.Model),
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('text', models.TextField(help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='CourseReview|text')),
            ],
            options={
                'verbose_name': 'Course Review',
                'verbose_name_plural': 'Course Reviews',
            },
        ),
        migrations.CreateModel(
            name='MetaCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=140, verbose_name='Course|name')),
                ('name_ru', models.CharField(max_length=140, null=True, verbose_name='Course|name')),
                ('name_en', models.CharField(max_length=140, null=True, verbose_name='Course|name')),
                ('slug', models.SlugField(help_text='Short dash-separated string for human-readable URLs, as in test.com/news/<b>some-news</b>/', max_length=70, unique=True, verbose_name='News|slug')),
                ('description', models.TextField(help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='Course|description')),
                ('description_ru', models.TextField(help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', null=True, verbose_name='Course|description')),
                ('description_en', models.TextField(help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', null=True, verbose_name='Course|description')),
                ('short_description', models.TextField(blank=True, verbose_name='Course|short_description')),
                ('short_description_ru', models.TextField(blank=True, null=True, verbose_name='Course|short_description')),
                ('short_description_en', models.TextField(blank=True, null=True, verbose_name='Course|short_description')),
                ('cover', sorl.thumbnail.fields.ImageField(blank=True, upload_to=courses.models.meta_course_cover_upload_to, verbose_name='MetaCourse|cover')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1990)], verbose_name='Year')),
                ('type', models.CharField(choices=[('spring', 'spring'), ('summer', 'summer'), ('autumn', 'autumn')], max_length=100, verbose_name='Semester|type')),
                ('starts_at', models.DateTimeField(editable=False, help_text='Datetime in UTC and is predefined.', verbose_name='Semester|StartsAt')),
                ('ends_at', models.DateTimeField(editable=False, help_text='Datetime in UTC and is predefined.', verbose_name='Semester|EndsAt')),
                ('enrollment_start_at', models.DateField(blank=True, help_text='Leave blank to fill in with the date of the beginning of the term', null=True, verbose_name='Enrollment start at')),
                ('enrollment_end_at', models.DateField(blank=True, help_text='Students can enroll on or leave the course before this date (inclusive)', null=True, verbose_name='Enrollment end at')),
                ('index', models.PositiveSmallIntegerField(editable=False, help_text='System field. Used for sort order and filter.', verbose_name='Semester index')),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semesters',
                'ordering': ['-year', 'type'],
                'unique_together': {('year', 'type')},
            },
        ),
        migrations.CreateModel(
            name='LearningSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Overrides location name', max_length=140, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='How to style text read <a href="/commenting-the-right-way/" target="_blank">here</a>. Partially HTML is enabled too.', verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=100, verbose_name='Order')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='learning_spaces', to='core.Branch', verbose_name='Branch')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='learning_spaces', to='core.Location', verbose_name='Location|Name')),
            ],
            options={
                'verbose_name': 'Learning Space',
                'verbose_name_plural': 'Learning Spaces',
            },
            bases=(core.timezone.models.TimezoneAwareModel, models.Model),
        ),
        migrations.CreateModel(
            name='CourseTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roles', bitfield.models.BitField((('lecturer', 'Lecturer'), ('reviewer', 'Reviewer'), ('seminar', 'Seminarian')), default=1)),
                ('notify_by_default', models.BooleanField(default=False, help_text='Add teacher to assignment notify settings by default', verbose_name='Notify by default')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_teachers', to='courses.Course')),
            ],
            options={
                'verbose_name': 'Course Teacher',
                'verbose_name_plural': 'Course Teachers',
            },
        ),
    ]
